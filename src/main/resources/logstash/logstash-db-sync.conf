input {
  jdbc {
    # MySQL/MariaDB database URL and database name
    jdbc_connection_string => "jdbc:mariadb://192.168.74.128:3306/foodie-shop-dev?useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true"

    # Username and password
    jdbc_user => "MY_USER"
    jdbc_password => "MY_PW"
    # Database driver location, can be absolute or relative path
    jdbc_driver_library => "/usr/local/logstash-6.4.3/sync/mariadb-java-client-3.1.4.jar"
    # Driver class name
    jdbc_driver_class => "org.mariadb.jdbc.Driver"
    # Enable pagination
    jdbc_paging_enabled => "false" # fasle work
    # Number of records per page, customizable
    jdbc_page_size => "1000"
    # SQL file path to execute
    # statement_filepath => "/usr/local/logstash-6.4.3/sync/foodie-items.sql"

    # statement => "
    #   SELECT
    #     i.id as itemId,
    #     i.item_name as itemName,
    #     i.sell_counts as sellCounts,
    #     ii.url as imgUrl,
    #     tempSpec.price_discount as price,
    #     i.updated_time as updated_time
    #   FROM items i
    #   LEFT JOIN items_img ii on i.id = ii.item_id
    #   LEFT JOIN (
    #     SELECT item_id, MIN(price_discount) as price_discount
    #     FROM items_spec
    #     GROUP BY item_id
    #   ) tempSpec ON i.id = tempSpec.item_id
    #   WHERE ii.is_main = 1
    #   AND i.updated_time >= :sql_last_value
    # "
    statement => "
      SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price,
        i.updated_time as updated_time
      FROM items i
      LEFT JOIN items_img ii on i.id = ii.item_id
      LEFT JOIN (
        SELECT item_id, MIN(price_discount) as price_discount
        FROM items_spec
        GROUP BY item_id
      ) tempSpec ON i.id = tempSpec.item_id
      WHERE ii.is_main = 1
      AND i.updated_time >= :sql_last_value
      ORDER BY i.updated_time ASC
    "

    # Schedule interval (minute, hour, day, month, year), * means run every minute
    schedule => "* * * * *"
    # Index type
    type => "_doc"
    # Enable tracking of last run result (last update time), stored in last_run_metadata_path file
    use_column_value => true
    # Path to store tracking results
    last_run_metadata_path => "/usr/local/logstash-6.4.3/sync/track_time"
    # If use_column_value is true, specify tracking column name (can be auto-increment ID or timestamp)
    tracking_column => "updated_time"
    # Type of tracking column
    tracking_column_type => "timestamp"
    # Whether to clear last_run_metadata_path record, true means query all records from start
    clean_run => false # true work
    # Convert database column names from uppercase to lowercase
    lowercase_column_names => false
  }
}
output {
  elasticsearch {
    # ES address
    hosts => ["192.168.74.138:9200"]
    # Index name to sync
    index => "foodie-items"
    # Set _docID same as data ID
    # document_id => "%{id}"
    document_id => "%{itemId}"

  }
  # Log output
  stdout {
    codec => json_lines
  }
}